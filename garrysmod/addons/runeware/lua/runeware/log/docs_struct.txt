LOG = {

	modes 		- table: this is a table of mode structures, a MODE structure is gone over below
	name 		- string: must not have spaces
	nicename	- string: nice name of the log. Used in GUI/CLI
	power		- int: the minimum power needed to access the log. Default: role.moderator
	
	=================================
	== vars below are auto defined ==
	=================================

	startpos	- int: Used for indexing and iterating as this is my own "looped table" which isn't the same as a normal table
	cache 		- table: The point where all LOGENTRY structs are stored
	id		- int: Index and numerical identifier of a log type
	mbits		- int: The number of bits required to network the current logging mode in use

}

MODE = {

	format		- string: The format used by this logging mode
	color		- color: The color used by this logging mode
	netvars		- table: A table of NETVARs used by this logging mode

	=================================
	== vars below are auto defined ==
	=================================

	fvars		- int: The number of format variables in the format

	===============
	== functions ==
	===============

	addnetvar( name, type, size )

}

NETVAR = {

	type		- string: The type for this netvar
		Allowed types: *Non allowed types are converted to strings*
			- string
			- int
			- float
			- steamid (networked differently than a string)

	size		- int: The size of this netvar (only for integer type)
	name		- string: Given name
	id		- int: Autogenerated index

}

LOGWRITE = { this is what you provide to log.write

	name		- string: The name of the log being written to
	mode	 	- int: The write mode of the log
	timeoverride	- int: The override for the time (if any, otherwise os.time() is used)
	nwvars		- table: The table of networked variables, written based on the write mode

}

LOGENTRY = { this is NOT what you provide to log.write

	str 		- string: The written string for the log
	time 		- int: Timestamp for when the log was written
	nwvars		- table: Table of network vars
	rawPos		- int: The indexed "raw" position in the "looped tables"
	mode		- int: The mode the log was written in
	meta		- table: The Format() args

}